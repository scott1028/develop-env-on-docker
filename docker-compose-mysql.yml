version: '2.1'
services:
  ubuntu1604-mysql:
    extends:
      file: ./base.yml
      service: base
    build:
      context: .
      dockerfile: Dockerfile-mysql
    volumes:
      - ./:/mnt/host
      - db-data:/var/lib/mysql  # always keep container data store to host volume of docker
    tty: true
    environment:
      - CWP=${CWP:-`mkdir -p ./mysql_data && pwd`}/mysql_data # a trick for create volume pass to device of volume
    entrypoint: | # use a trick chown 1000 to set permission approval to first normal user of system
      /bin/sh -c "rm -rf /run/mysqld
      cp /etc/mysql/mysql.conf.d/mysqld.cnf /tmp/mysqld.cnf
      sed 's/bind-address/#bind-address/g' /tmp/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf
      echo 'general_log=1' >> /etc/mysql/mysql.conf.d/mysqld.cnf
      echo 'general_log_file=/var/log/mysql/mysql.log' >> /etc/mysql/mysql.conf.d/mysqld.cnf
      mkdir -p /var/run/mysqld
      chown mysql:mysql /var/run/mysqld
      nohup mysqld_safe --skip-grant-tables &
      until [ -f /var/run/mysqld/mysqld.pid ]
      do
        sleep 1
      done
      echo \"MySQL Launched\"
      chown 1000 /var/lib/mysql
      mysql -u root --execute=\"SET global general_log = 1; SET global general_log_file='/tmp/mysql.log'; SET global log_output = 'file';\"
      /bin/bash -c 'touch /tmp/mysql.log && tail -f /tmp/mysql.log'"
    ports:
      - "${HPORT:-3306}:3306"
volumes:
  db-data: # use volume, remenber to inspect volume path and backup
    driver: local
    driver_opts:
      type: volume
      o: bind
      device: "${PWD:-/tmp}/mysql_data" # $PWD is system variable of shell of linux
