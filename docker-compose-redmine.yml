version: '3.1'
services:
  postgres:
    hostname: PostgreSQL
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./redmine_postgresql:/var/lib/postgresql/data # use mount
      - ./volume:/volume # a trick for create folder on host for redmine service
    environment:
      - POSTGRES_USER=redmine
      - POSTGRES_PASSWORD=redmine
    image:
      postgres:11.2
  redmine:
    environment:
      - CWP=${CWP:-`mkdir -p ./volume && pwd`}/volume # a trick for create volume pass to device of volume
    hostname: Redmine
    restart: always
    ports:
      - 80:3000
    volumes:
      - ./redmine_files:/usr/src/redmine/files/files # use mount
      - redmine_config:/usr/src/redmine/config # use volume, see below define at end line
    environment:
      - REDMINE_DB_POSTGRES=postgres
      - REDMINE_DB_DATABASE=redmine
      - REDMINE_DB_USERNAME=redmine
      - REDMINE_DB_PASSWORD=redmine
    links:
      - postgres:postgres
    image:
      redmine:4.0.1
volumes:
  redmine_config: # use volume, remenber to inspect volume path and backup
    driver: local
    driver_opts:
      type: volume
      o: bind
      device: "${PWD}/volume" # $PWD is system variable of shell of linux

# Note:
# >> volume: it will copy container file to host with bind opt and device filled path
# >> mount: it will not copy files, it's just bind
#
# For Volume you can see the config default
# >> docker volume inspect my-vol
#
# Variable passing
# >> Ref: https://docs.docker.com/compose/compose-file/#variable-substitution
# >> You can set default values for environment variables using a .env file, which Compose automatically looks for. Values set in the shell environment override those set in the .env file.
